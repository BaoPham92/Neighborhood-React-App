{"version":3,"sources":["Components/Map.js","Components/ResultsWindow.js","Components/UserWindow.js","Utilities/MapsAPI.js","App.js","serviceWorker.js","index.js"],"names":["MyMapComponent","withScriptjs","withGoogleMap","props","react_default","a","createElement","lib","defaultZoom","center","markers","filter","marker","isShowing","map","markerInfo","venues","find","index","id","tabIndex","key","position","lat","lng","title","onClick","toggleMarker","defaultAnimation","google","maps","Animation","DROP","animation","isActive","BOUNCE","Fragment","className","role","name","categories","location","address","Map","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","assign","aria-label","isMarkerShown","googleMapURL","loadingElement","style","height","containerElement","width","mapElement","Component","window","checker","scripts","document","getElementsByTagName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","async","defer","err","return","gm_authFailure","alert","ResultsWindow","_this","itemToggle","UserWindow","state","query","markerFinder","e","setState","target","reg","RegExp","escaperegexp","toLocaleLowerCase","trim","updated","venue","currentMarkers","console","log","test","updateMarkers","venueVisibility","includes","react_debounce_input_lib","type","placeholder","debounceTimeout","onChange","ResultsWindow_ResultsWindow","instance","axios","create","defaults","timeout","apiUtility","nearId","queryId","endPoint","URLSearchParams","client_id","client_secret","v","near","limit","radius","get","headers","Accept","Content-Type","catch","error","request","response","status","errorRes","data","meta","concat","code","errorDetail","requestId","message","inputId","MapAPI","callFetch","idFetch","idMenu","App","toggleMarkerOff","veneu","idDetails","then","res","newVenue","menu","updatedMarkers","_this2","getVenues","results","geocode","feature","geometry","UserWindow_UserWindow","Map_Map","Boolean","hostname","match","ReactDOM","render","BrowserRouter","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.78a5e4e0.chunk.js","sourcesContent":["/* global google */\n\n// https://stackoverflow.com/a/51198724/9154831\n// Oddly had trouble with figuring out the answer I couldn't find at https://tomchentw.github.io/react-google-maps/\n\nimport React, { Component } from 'react'\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from 'react-google-maps'\n\nconst MyMapComponent = withScriptjs(withGoogleMap((props) =>\n    <GoogleMap\n        defaultZoom={14}\n        center={props.center}>\n\n        {/* Conditional for Marker rendering */}\n        {props.markers &&\n            props.markers\n                .filter(marker => marker.isShowing)\n                .map((marker) => {\n\n                    // Infowindow info if title === marker title\n                    const markerInfo = props.venues.find(index => index.id === marker.id)\n                    // console.log(markerInfo)\n\n                    return (\n                        <Marker\n                            tabIndex=\"2\"\n                            key={marker.id}\n                            position={{ lat: marker.lat, lng: marker.lng }}\n                            title={marker.title}\n                            onClick={() => props.toggleMarker(marker)}\n                            defaultAnimation={google.maps.Animation.DROP}\n                            animation={marker.isActive && google.maps.Animation.BOUNCE }\n                        >\n\n                            {/* InforWindow data render upon contional */}\n                            {marker.isActive && (\n                                <InfoWindow>\n                                    <React.Fragment>\n\n                                        {/* Information provided by https://developer.foursquare.com/ */}\n                                        <section \n                                        className=\"info-window\"\n                                        role=\"conteninfot\">\n\n                                            <h1>{markerInfo.name}</h1>\n                                            <hr></hr>\n\n                                            <h3>Type Of Place:</h3>\n                                            <p>{markerInfo.categories[0].name}</p>\n\n                                            <h3>Location And Hours:</h3>\n                                            <p>{markerInfo.location.address}</p>\n\n                                            <h2>Something To Eat?</h2>\n\n                                        </section>\n                                    </React.Fragment>\n                                </InfoWindow>\n                            )}\n                        </Marker>\n                    )\n                })}\n    </GoogleMap>\n))\n\nexport default class Map extends Component {\n    constructor(props) {\n        super()\n    }\n\n    render() {\n        return (\n            < MyMapComponent\n            {...this.props}\n                role=\"application\" aria-label=\"Restaurant locations\"\n                isMarkerShown\n                googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&key=AIzaSyBglNEQSJfyWYuoGeyTCS5IyCoawoPMR0s&v=3&callback=checker\"\n                loadingElement={< div style={{ height: `100%` }} />}\n                containerElement={< div style={{ height: `100%`, width: '100%' }} />}\n                mapElement={< div style={{ height: `100%` }} />}\n            />\n        )\n    }\n}\n\n// Since there are multiple import instances of google maps api script tags. We will set defer and async to true.\nconst checker = () => {\n    const scripts = window.document.getElementsByTagName('script')\n    for (const index of scripts) {\n        index.async = true\n        index.defer = true\n        // console.log(index)\n    }\n}\nwindow.checker = checker\n\n// here you define your authentication failed message\nwindow.gm_authFailure = () => {\n\n    alert(`\n    Error with authentication for Google Maps.\n\n    Attempt to troubleshoot by:\n\n    - Checking the API key for Google Maps.\n    - Checking the API key console for any limitations.\n    `)\n}\n","import React, { Component } from 'react'\n\nexport default class ResultsWindow extends Component {\n\n    render() {\n        // console.log(this.props)\n        return (\n            <ul className=\"Results-Window\">\n            {/* To toggle infowindow onClick and list markers */}\n                {this.props.venues && this.props.venues.map((index) => (\n\n                    <li\n                        key={index.id}\n                        className=\"Results-List\"\n                        onClick={() => this.props.itemToggle(index)}\n                        role=\"list\"                        \n                        tabIndex=\"1\" // 1 priority of input, & lowercase tabindex for regular li\n                        >\n                        {/* Information provided by https://developer.foursquare.com/ */}\n                        {index.name}\n                    </li>\n\n                ))}\n            </ul>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { DebounceInput } from 'react-debounce-input'\nimport escaperegexp from 'escape-string-regexp'\n\n// Component\nimport ResultsWindow from './ResultsWindow'\n\nexport default class UserWindow extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            query: '',\n            markerFinder: (e) => {\n                this.setState({ query: e.target.value })\n                const reg = new RegExp(escaperegexp(this.state.query).toLocaleLowerCase().trim())\n\n                const updated = this.props.venues.map(venue => {\n                    const currentMarkers = this.props.markers.find(marker => marker.title === venue.name)\n                    console.log(currentMarkers)\n\n                    // Changed toLowerCase - https://stackoverflow.com/a/34310390/9154831\n                    // Possible Todo for multiple languages when continuing project. \n                    reg.test(venue.name.toLocaleLowerCase())\n                        ? currentMarkers.isShowing = true\n                        : currentMarkers.isShowing = false\n                })\n                this.props.updateMarkers({ updated })\n            },\n\n            venueVisibility: () => {\n                if (this.state.query.trim() !== '') {\n                    const venues = this.props.venues.filter(venue =>\n                        venue.name.toLocaleLowerCase().includes(this.state.query.toLocaleLowerCase()))\n                        return venues\n                }\n                return this.props.venues\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"user-window\">\n\n                <div className=\"search-box\">\n\n                    <DebounceInput\n                        // 0 because of search / input forms should focusable\n                        tabIndex=\"0\"\n                        role=\"search\"\n                        type=\"text\"\n                        placeholder=\"Search Places\"\n                        debounceTimeout={125}\n                        onChange={this.state.markerFinder}\n                        value={this.state.query}\n                    />\n\n                    <ResultsWindow {...this.props} venues={this.state.venueVisibility()}/>\n\n                </div>\n\n            </div>\n        )\n    }\n}\n","import axios from 'axios'\n\n// TODO: The below is to be fiddled for Axios intercept method implementations.\nconst instance = axios.create();\n\ninstance.defaults.timeout = 2000; // Timeout to help prevent 400 errors.\n\nclass apiUtility {\n    \n    /* Information provided by https://developer.foursquare.com/ */\n    static callFetch(nearId, queryId) {\n        \n        // Parameter / configuration\n        const params = {\n            client_id: '3S3Z01DGDZKC512ISDMGGJ1OCFBSHTB0CPN4HKXQ1HFSFBAX',\n            client_secret: 'WXUKLTPIEAVA1INPRRXZJFUCMQFBPOVW3VMKXBH4M3L5IPKR',\n            v: '20180323',\n            near: nearId,\n            query: queryId,\n            limit: 10,\n            radius: 2500\n        }\n\n        // axios API call for returning information based on criterias from (params) variable above.\n        const endPoint = 'https://api.foursquare.com/v2/venues/search?' + new URLSearchParams(params)\n\n            return instance.get(endPoint, {\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                }\n            })\n        .catch(error => {\n            console.log(error.request, error.response)\n\n            if (error.response.status === 429) {\n                const errorRes = error.response.data.meta\n\n                alert(`\n                Error retreiving venue's information. \n                \n                Call Type: (Search Call)\n\n                Error code: ${errorRes.code} \n                Details: ${errorRes.errorDetail} \n                RequestId: ${errorRes.requestId}`)\n\n            } else {\n                console.log('Error', error.message);\n            }\n        })\n    }\n    static idFetch(inputId) {\n        \n        // Parameter / configuration\n        const params = {\n            client_id: '3S3Z01DGDZKC512ISDMGGJ1OCFBSHTB0CPN4HKXQ1HFSFBAX',\n            client_secret: 'WXUKLTPIEAVA1INPRRXZJFUCMQFBPOVW3VMKXBH4M3L5IPKR',\n            v: '20180323'\n        }\n\n        // axios API call for returning information based on criterias from (params) variable above.\n        const endPoint = `https://api.foursquare.com/v2/venues/${inputId}?` + new URLSearchParams(params)\n\n            return instance.get(endPoint, {\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                }\n            })\n        .catch(error => {\n            console.log(error.request, error.response)\n\n            if (error.response.status === 429) {\n                const errorRes = error.response.data.meta\n\n                alert(`\n                Error retreiving this venue's information. \n                \n                Call Type: (Venue Details Call)\n\n                Error code: ${errorRes.code} \n                Details: ${errorRes.errorDetail} \n                RequestId: ${errorRes.requestId}`)\n\n            } else {\n                console.log('Error', error.message);\n            }\n        })\n    }\n\n    static idMenu(inputId) {\n        \n        // Parameter / configuration\n        const params = {\n            client_id: '3S3Z01DGDZKC512ISDMGGJ1OCFBSHTB0CPN4HKXQ1HFSFBAX',\n            client_secret: 'WXUKLTPIEAVA1INPRRXZJFUCMQFBPOVW3VMKXBH4M3L5IPKR',\n            v: '20180323'\n        }\n\n        // axios API call for returning information based on criterias from (params) variable above.\n        const endPoint = `https://api.foursquare.com/v2/venues/${inputId}/menu?` + new URLSearchParams(params)\n        \n            return instance.get(endPoint, {\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                }\n            })\n        .catch (error => {\n            console.log(error.request, error.response)\n\n            if (error.response.status === 429) {\n                const errorRes = error.response.data.meta\n\n                alert(`\n                Error retreiving this venue's menu information. \n                \n                Call Type: (Menu Call)\n\n                Error code: ${errorRes.code} \n                Details: ${errorRes.errorDetail} \n                RequestId: ${errorRes.requestId}`)\n\n            } else {\n                console.log('Error', error.message);\n            }\n        })\n    }\n}\n\nexport default class MapAPI {\n    static getVenues(nearId, queryId) {\n        return apiUtility.callFetch(nearId, queryId)\n    }\n    static idDetails(inputId) {\n        return apiUtility.idFetch(inputId)\n    }\n    static idMenu(inputId) {\n        return apiUtility.idMenu(inputId)\n    }\n}","import React, { Component } from 'react'\nimport './App.css'\n\n// Components\nimport Map from './Components/Map.js'\nimport UserWindow from './Components/UserWindow.js'\n\n// Utility Component\nimport MapAPI from './Utilities/MapsAPI.js'\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      center: [],\n      venues: [],\n      markers: [],\n      toggleMarkerOff: () => {\n        const marker = this.state.markers.map(marker => {\n          marker.isActive = false\n          return marker\n        })\n        this.setState({ markers: Object.assign(this.state.markers, marker) })\n      },\n      toggleMarker: marker => {\n        this.state.toggleMarkerOff()\n\n        marker.isActive = true\n        this.setState({ markers: Object.assign(this.state.markers, marker) })\n\n        const venue = this.state.venues.find(veneu => veneu.id === marker.id)\n\n        // Difference of details merged. \n        // From Udacity students on slack call for helping with this.\n        MapAPI.idDetails(marker.id)\n          .then(res => {\n            const newVenue = Object.assign(venue, res.data.response.venue)\n            this.setState({ venues: Object.assign(this.state.venues, newVenue) })\n          })\n          // This error (alert) call handles bot API GETs as these are both in a function.\n          .catch((error) => {\n            console.log(error)\n          })\n\n        // The best, food API calls for menus.\n        MapAPI.idMenu(marker.id)\n          .then((res) => {\n            const newVenue = Object.assign(venue, res.data.response.menu)\n            this.setState({ venues: Object.assign(this.state.venues, newVenue) })\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      },\n      updateMarkers: (updatedMarkers) => {\n        this.setState(updatedMarkers)\n      },\n\n      // Toggle infoWindow for items.\n      itemToggle: venue => {\n        const marker = this.state.markers.find(marker => marker.id === venue.id)\n        console.log(venue)\n        console.log(marker, this.state.markers)\n\n        this.state.toggleMarker(marker)\n      }\n    }\n  }\n\n  componentDidMount() {\n    // Axios API call for FourSquare API.\n    MapAPI.getVenues('washington', 'coffee')\n      .then((results) => {\n        const center = results.data.response.geocode.feature.geometry.center\n        const venues = results.data.response.venues\n        const markers = venues.map((index) => {\n          return {\n            lat: index.location.lat,\n            lng: index.location.lng,\n            title: index.name,\n            id: index.id,\n            isActive: false,\n            isShowing: true\n          }\n        })\n        this.setState({ center, venues, markers })\n        console.log(results)\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  render() {\n    return (\n      <main\n        className='App'\n        role=\"main\">\n        <UserWindow {...this.state} />\n        <Map {...this.state} />\n      </main>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n<Router>\n        <App />\n</Router>\n, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()"],"sourceRoot":""}